<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="notice">
	<select id="getCurrentSequence" resultType="long">
		select last_insert_id()
	</select>
	
	<sql id="searchType">
		<if test="types != null and keyword != null">
			where
			<trim prefixOverrides="or">
				<foreach item="type" collection="types">
					<trim prefix="or">
						<choose>
							<when test="type == 'noticeTitle'.toString()">
								notice_title like concat('%', #{keyword}, '%')
							</when>
							<!-- <when test="type == 'content'.toString()">
								board_content like concat('%', #{keyword}, '%')
							</when>
							<when test="type == 'writer'.toString()">
								member_name like concat('%', #{keyword}, '%')
							</when> -->
						</choose>
					</trim>
				</foreach>
			</trim>
		</if>
	</sql>
	<select id="selectAll" resultType="noticeVO" parameterType="map">
		select notice_id, notice_title, notice_context, notice_date, notice_alter_date
		from tbl_customer_notice
		<include refid="searchType"/>
		order by notice_id desc
		limit #{startRow}, #{rowCount}
	</select>
	
	<select id="select" parameterType="long" resultType="NoticeVO">
		select notice_id, notice_title, notice_content
		from tbl_customer_notice
		where notice_id = #{noticeId}
	</select>
	
	<select id="getTotal" resultType="long">
		select count(notice_id) 
		from tbl_customer_notice
	</select>
	
	<insert id="insert" parameterType="noticeVO">
		insert into tbl_customer_notice 
		(notice_title, notice_context, notice_date) 
		values(#{noticeTitle}, #{noticeContext}, #{noticeDate})
	</insert>
	
	<update id="update" parameterType="noticeVO">
		update kids.tbl_customer_notice
		set notice_title=#{noticeTitle}, notice_context=#{noticeContext}, notice_alter_date=#{noticeAlterDate}
		where notice_id=#{noticeId};
	</update>
	
	<delete id="delete" parameterType="long">
		delete 
		from tbl_customer_notice
		where notice_id = #{noticeId}
	</delete>
</mapper>